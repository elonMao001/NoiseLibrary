
#pragma kernel RegularNoise
#pragma kernel LayeredNoise

#include "Packages/jp.keijiro.noiseshader/Shader/SimplexNoise2D.hlsl"

#define THREAD_COUNT 16

struct NoiseLayer {
    float amplitude, frequency;
};

RWTexture2D<float4> NoiseTexture;
float amplitude;
float frequency;
int resolution;
float2 centre;

[numthreads(THREAD_COUNT, THREAD_COUNT, 1)]
void RegularNoise(uint2 id : SV_DispatchThreadID) {
    float2 pos = (float2)(centre - id) / resolution;

    NoiseTexture[id.xy] = SimplexNoise(float2(pos.x * frequency, pos.y * frequency)) * amplitude * 0.5 + 0.5;
}

RWStructuredBuffer<NoiseLayer> noiseLayers;

[numthreads(THREAD_COUNT, THREAD_COUNT, 1)]
void LayeredNoise(uint2 id : SV_DispatchThreadID) {
    float2 pos = (float2)(centre - id) / resolution;

    NoiseTexture[id.xy] = SimplexNoise(float2(pos.x * frequency, pos.y * frequency)) * amplitude * 0.5 + 0.5;
}
